dart <- dart[order(dart$ID,dart$Survey_date),]
res <- tapply(dart$Survey_date, INDEX = list(dart$ID),
FUN = function(t){
return( as.numeric(t-t[1]) ) ## keep diff in days
},simplify = FALSE)
dart$Time <- do.call(c,as.list(res))
res <- tapply(dart$Survey_date, INDEX = list(dart$ID),
FUN = function(t){
return( 1:length(t) ) ## keep diff in days
},simplify = FALSE)
dart$Survey_num <- do.call(c,as.list(res))
dart$Months <- ceiling(dart$Time/(365.25/12))
# Only first 12 visits
dart <- dart %>% filter(Survey_num <= 12)
dart$Clinic <- as.character(dart$Clinic)
dart <- dart %>%
mutate(
Clinic = ifelse(
Clinic == "BMT/Hematology" |
Clinic == "Leukemya" |
Clinic == "Lymphoma" |
Clinic == "Multiple Myeloma",
"Hematological",
Clinic
)
) %>%
mutate(Clinic = ifelse(Clinic == "GI",
"Gastrointestinal",
Clinic)) %>%
mutate(Clinic = ifelse(Clinic == "GU",
"Genitourinary",
Clinic)) %>%
mutate(Clinic = ifelse(Clinic == "Gynecology",
"Gynecological",
Clinic)) %>%
mutate(Clinic = ifelse(Clinic == "Testes",
"Genitourinary",
Clinic)) %>% filter(Clinic %in% c("Hematological","Breast", "Gastrointestinal"))
table(dart$Clinic)
save(dart, "DART.RData")
save(dart, file = "DART.RData")
source("SynSurrogateSim.R")
source("SynSurrogateSim.R")
setwd("~/Library/CloudStorage/OneDrive-UniversityofToronto/EHR_research/SyntheticSurrogateAnalysis/Code")
source("SynSurrogateSim.R")
View(GenPheno)
n.sim <- 10^4 # number of replicates
rho <- c(0, 0.25, 0.5, 0.75)
g <- GenGeno(n = 10^3, snps = 1)
View(g)
table(g)
target <- rnorm(g * beta_g, 1)
beta_g = 0.08
target <- rnorm(g * beta_g, 1)
var(target)
var(g)
var(g)/var(target)
lm(target ~ g)
summary(lm(target ~ g))
var(g)/var(target)
beta_g = 1
g <- GenGeno(n = 10^3, snps = 1)
target <- rnorm(g * beta_g, 1)
var(g)/var(target)
beta_g = 0.08
g <- GenGeno(n = 10^3, snps = 1)
target <- rnorm(g * beta_g, 1)
var(g)/var(target)
var(g)/var(target)
1000*0.05*0.95
1000*0.05*0.95
1000*0.05*0.95*0.08
summary(lm(target ~ g))
g = 1
beta_g = 1
summary(lm(target ~ g))
g <- GenGeno(n = 10^3, snps = 1)
target <- rnorm(g * beta_g, 1)
summary(lm(target ~ g))
summary(lm(target ~ g-1))
beta_g = 0.08
g <- GenGeno(n = 10^3, snps = 1)
target <- rnorm(g * beta_g, 1)
summary(lm(target ~ g-1))
beta_g = 0.05
g <- GenGeno(n = 10^3, snps = 1)
target <- rnorm(g * beta_g, 1)
summary(lm(target ~ g-1))
summary(lm(target ~ g))
summary(lm(target ~ g))
summary(lm(target ~ g-1))
plot(g, target)
0.5-0.05
0.45-0.45^2
0.5+0.05
0.55/2
0.5-0.05
0.45^2
0.45^2/6
2*0.275+0.03375-2*0.275^2
beta_g = 0.1
g <- GenGeno(n = 10^3, snps = 1)
target <- rnorm(g * beta_g, 1)
assoc.oracle <- lm(target ~ g -1)
out <- summary(assoc.oracle)$coefficients["g", c(1,2,4)]
out
yhat <- rnorm(g * beta_g + rho * (target - g * beta_g), 1-rho^2)
n0 = 10^3 # complete case
# correct model + unknown
index <- sample(1:n0, 500)
beta_hat <- summary(lm(y[index]~g[index]))
beta_hat <- summary(lm(target[index]~g[index]))
beta_hat <- summary(lm(target[index]~g[index]-1))$coefficients
summary(lm(target[index]~g[index]-1))$coefficients
beta_hat <- summary(lm(target[index]~g[index]-1))$coefficients$Estimate
beta_hat <- summary(lm(target[index]~g[index]-1))$coefficients[["Estimate"]]
beta_hat <- summary(lm(target[index]~g[index]-1))[["coefficients"]][["Estimate"]]
summary(lm(target[index]~g[index]-1))[["coefficients"]]
summary(lm(target[index]~g[index]-1))[["coefficients"]][,1]
beta_hat <- summary(lm(target[index]~g[index]-1))[["coefficients"]][[,1]]
beta_hat <- summary(lm(target[index]~g[index]-1))[["coefficients"]][,1]
yhat <- rnorm(g * beta_hat + rho * (target - g * beta_hat), 1-rho^2)
assoc.surrogate <- lm(yhat ~ g -1)
out <- c(out, summary(assoc.surrogate)$coefficients["g", c(1,2,4)])
View(GenPheno)
CalcEffectSizes <- function(
n_covar,
pve_covar = 0.2,
pve_geno,
n_pcs,
pve_pcs = 0.05,
resid_var = 1.00
) {
# Proportion variation explained by residual.
pve_resid <- 1 - pve_covar - pve_geno - pve_pcs
if (pve_resid < 0) {
stop("Total variation explained by covars, geno, and PCs cannot exceed 1.")
}
# Coefficients.
bg <- sqrt(resid_var * pve_geno / pve_resid)
bx <- sqrt(resid_var * pve_covar / (n_covar * pve_resid))
bs <- sqrt(resid_var * pve_pcs / (n_pcs * pve_resid))
# Output.
out <- list(
"bg" = bg,
"bx" = rep(bx, times = n_covar),
"bs" = rep(bs, times = n_pcs)
)
return(out)
}
CalcEffectSizes(n_covar = 3, pve_geno = 0.005, n_pcs = 0)
n0 = 10^3 # number of complete cases
rbinom(1, n0, 0.5)
X <- cbind(rnorm(n0), rbinom(n0, 1, 0.5))
View(X)
View(GenPheno)
m = 0.25
rho = 0.25
pheno <- GenPheno(n = n0, beta = beta, miss = m, rho = p)
n0 = 10^3 # number of complete cases
beta <- c(1, 0.42, 0.11) # beta0, beta1, beta2
beta_g <- 0.1
X <- cbind(rnorm(n0), rbinom(n0, 1, 0.5))
pheno <- GenPheno(n = n0, beta = beta, miss = m, rho = p)
p = 0.25
n0 = 10^3 # number of complete cases
beta <- c(1, 0.42, 0.11) # beta0, beta1, beta2
beta_g <- 0.1
X <- cbind(rnorm(n0), rbinom(n0, 1, 0.5))
pheno <- GenPheno(n = n0, beta = beta, miss = m, rho = p)
View(pheno)
g <- GenGeno(n = n0, snps = 1)
target <- pheno$target + beta_g * g
pheno <- GenPheno(n = n0, beta = beta, miss = m, rho = p, x = X)
View(GenPheno)
pheno <- GenPheno(n = n0, beta = beta, x = X, miss = m, rho = p)
View(GenPheno)
GenPheno <- function(
n,
beta,
x,
alpha = NULL,
include_intercept = FALSE,
miss = 0.0,
rho = 0.0
) {
if (is.null(alpha)) {alpha <- beta}
# Covariates.
if (include_intercept) {
n_covar <- length(beta) - 1
} else {
n_covar <- length(beta)
}
# If x is not provided, generate x from Normal
if (is.null(x)) {
x <- rbind(replicate(n_covar, rnorm(n)))
x <- scale(x)}
if (include_intercept) {
x <- cbind(1, x)
colnames(x) <- paste0("x", seq(from = 0, to = n_covar))
} else {
colnames(x) <- paste0("x", seq(from = 1, to = n_covar))
}
# Means.
mu_target <- x %*% beta
mu_surrogate <- x %*% alpha
# Outcomes.
target <- mu_target + rnorm(n)
surrogate <- mu_surrogate + rho * (target - mu_target) + rnorm(n, sd = sqrt(1 - rho^2))
# Missingness.
oracle <- target
target[sample.int(n, size = round(miss * n))] <- NA
# Output.
data <- data.frame(target, oracle, surrogate, x)
return(data)
}
pheno <- GenPheno(n = n0, beta = beta, x = X, miss = m, rho = p)
pheno <- GenPheno(n = n0, beta = beta, x = X, miss = m, rho = p, intercept = TRUE)
View(GenPheno)
pheno <- GenPheno(n = n0, beta = beta, x = X, miss = m, rho = p, include_intercept = TRUE)
View(pheno)
assoc.oracle <- lm(target ~ g + pheno$x1 + pheno$x2)
out <- summary(assoc.oracle)$coefficients["g", c(1,2,4)]
out
g <- GenGeno(n = n0, snps = 1)
target <- pheno$target + beta_g * g
assoc.oracle <- lm(target ~ g + pheno$x1 + pheno$x2)
out <- summary(assoc.oracle)$coefficients["g", c(1,2,4)]
out
fit.binormal <- SurrogateRegression::Fit.BNLS(
t = target,
s = pheno$surrogate,
X = cbind(pheno %>% select(starts_with("x")),g)
)
result <- readRDS("/Users/jianhuigao/Library/CloudStorage/OneDrive-UniversityofToronto/EHR_research/SyntheticSurrogateAnalysis/Result/Robustness/robustness.rds")
View(result)
setwd("/Users/jianhuigao/Library/CloudStorage/OneDrive-UniversityofToronto/EHR_research/SyntheticSurrogateAnalysis/Result/Robustness/")
n.sim = 10^4
result <- readRDS("robustness.rds")
result[[1]][[1]][[1]]
result[[1]]
View(result)
result[[1]][[1]]
result[[1]][[1]][,1]
boxplot(t1e[[i]][[m]][[j]])
boxplot(result[[1]][[1]][,1])
plot(result[[1]][[1]][,1],result[[1]][[1]][,4])
result <- foreach(m = c(1,2,3)) %:%
foreach(p = c(1,2)) %:%
foreach(j = 1:10, .combine = rbind, .packages = c("doParallel","dplyr"), .errorhandling = "pass") %do% {
rnorm(1)
}
library(doParallel)
result <- foreach(m = c(1,2,3)) %:%
foreach(p = c(1,2)) %:%
foreach(j = 1:10, .combine = rbind, .packages = c("doParallel","dplyr"), .errorhandling = "pass") %do% {
rnorm(1)
}
View(result)
result <- foreach(m = c(1,2,3)) %:%
foreach(p = c(1,2)) %:%
foreach(j = 1:10, .combine = rbind, .packages = c("doParallel","dplyr"), .errorhandling = "pass") %do% {
rnorm(1)
}
View(result)
result[[1]][[1]]
par(mfrow = c(2,2))
for (m in 1:4) {
for (j in 1:4) {
rate <- c(0, 0.25, 0.5, 0.75)[m]
p <- c(0, 0.25, 0.5, 0.75)[j]
plot(result[[rate]][[p]][,1],result[[rate]][[p]][,4], main = paste0('missing = ', rate, ", rho = ", p ))
}
}
n.sim = 10^4
result <- readRDS("robustness.rds")
par(mfrow = c(2,2))
for (m in 1:4) {
for (j in 1:4) {
rate <- c(0, 0.25, 0.5, 0.75)[m]
p <- c(0, 0.25, 0.5, 0.75)[j]
plot(result[[rate]][[p]][,1],result[[rate]][[p]][,4], main = paste0('missing = ', rate, ", rho = ", p ))
}
}
plot(result[[rate]][[p]][,1],result[[rate]][[p]][,4], main = paste0('missing = ', rate, ", rho = ", p ))
result[[rate]][[p]][,1]
plot(result[[m]][[j]][,1],result[[rate]][[p]][,4], main = paste0('missing = ', rate, ", rho = ", p ))
plot(result[[m]][[j]][,1],result[[m]][[j]][,4], main = paste0('missing = ', rate, ", rho = ", p ))
par(mfrow = c(2,2))
for (m in 1:4) {
for (j in 1:4) {
rate <- c(0, 0.25, 0.5, 0.75)[m]
p <- c(0, 0.25, 0.5, 0.75)[j]
plot(result[[m]][[j]][,1],result[[m]][[j]][,4], main = paste0('missing = ', rate, ", rho = ", p ))
}
}
par(mfrow = c(2,2))
for (m in 1:4) {
for (j in 1:4) {
rate <- c(0, 0.25, 0.5, 0.75)[m]
p <- c(0, 0.25, 0.5, 0.75)[j]
plot(result[[m]][[j]][,1],result[[m]][[j]][,4], main = paste0('missing = ', rate, ", rho = ", p), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))
}
}
plot(result[[m]][[j]][,1],result[[m]][[j]][,4], main = expression("misssing rate = " ~ rate), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))
plot(result[[m]][[j]][,1],result[[m]][[j]][,4], main = expression("misssing rate = " ~ evaluate(rate)), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))
plot(result[[m]][[j]][,1],result[[m]][[j]][,4], main = bquote(.(rate) ~ AC50 ~ (mu*M)), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))
plot(result[[m]][[j]][,1],result[[m]][[j]][,4], main = bquote("Missing = " ~ .(rate) ~ AC50 ~ (mu*M)), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))
plot(result[[m]][[j]][,1],result[[m]][[j]][,4], main = bquote("Target missing = " ~ .(rate) ~ rho = ~ /(p)), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))
plot(result[[m]][[j]][,1],result[[m]][[j]][,4], main = bquote("Target missing = " ~ .(rate) ~ rho "=" ~ /(p)), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))
plot(result[[m]][[j]][,1],result[[m]][[j]][,4], main = bquote("Target missing = " ~ .(rate) ~ (rho) ~ "=" ~ /(p)), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))
plot(result[[m]][[j]][,1],result[[m]][[j]][,4], main = bquote("Target missing = " ~ .(rate) ~ (rho) ~ "=" ~ .(p)), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))
plot(result[[m]][[j]][,1],result[[m]][[j]][,4], main = bquote("Target missing = " ~ .(rate) ~ rho ~ "=" ~ .(p)), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))
plot(result[[m]][[j]][,1],result[[m]][[j]][,4], main = bquote("Target missing = " ~ .(rate) ~ ,rho ~ "=" ~ .(p)), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))
plot(result[[m]][[j]][,1],result[[m]][[j]][,4], main = bquote("Target missing = " ~ .(rate) ~ "," ~ rho ~ "=" ~ .(p)), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))
par(mfrow = c(2,2))
for (m in 1:4) {
for (j in 1:4) {
rate <- c(0, 0.25, 0.5, 0.75)[m]
p <- c(0, 0.25, 0.5, 0.75)[j]
plot(result[[m]][[j]][,1],result[[m]][[j]][,4], main = bquote("Target missing = " ~ .(rate) ~ "," ~ rho ~ "=" ~ .(p)), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))
}
}
par(mfrow = c(2,2))
for (j in 1:4) {
for (m in 1:4) {
rate <- c(0, 0.25, 0.5, 0.75)[m]
p <- c(0, 0.25, 0.5, 0.75)[j]
plot(result[[m]][[j]][,1],result[[m]][[j]][,4], main = bquote("Target missing = " ~ .(rate) ~ "," ~ rho ~ "=" ~ .(p)), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))
}
}
for (m in 1:4) {
rate <- c(0, 0.25, 0.5, 0.75)[m]
p <- c(0, 0.25, 0.5, 0.75)[2]
plot(result[[m]][[2]][,1],result[[m]][[2]][,4], main = bquote("Target missing = " ~ .(rate) ~ "," ~ rho ~ "=" ~ .(p)), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))
}
install.packages("RNOmni")
n0 = 10^3 # number of complete cases
beta <- c(1, 0.42, 0.11) # beta0, beta1, beta2
beta_g <- 0.1
X <- cbind(rnorm(n0), rbinom(n0, 1, 0.5))
pheno <- GenPheno(n = n0, beta = beta, x = X, miss = m, rho = p, include_intercept = TRUE)
g <- GenGeno(n = n0, snps = 1)
target <- pheno$target + beta_g * g
plot(target)
hist(target)
target <- RNOmni::RankNorm(target)
target <- RNOmni::RankNorm(u = target)
target[!is.na(target)] <- RNOmni::RankNorm(target[!is.na(target)])
hist(target)
styler:::style_active_file()
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/jianhuigao/Library/CloudStorage/OneDrive-UniversityofToronto/EHR_research/SyntheticSurrogateAnalysis/Result/Robustness/")
n.sim <- 10^4
result <- readRDS("robustness.rds")
par(mfrow = c(2, 2))
for (j in 1:4) {
rate <- c(0, 0.25, 0.5, 0.75)[2]
p <- c(0, 0.25, 0.5, 0.75)[j]
plot(result[[2]][[j]][, 1], result[[2]][[j]][, 4], main = bquote("Target missing = " ~ .(rate) ~ "," ~ rho ~ "=" ~ .(p)), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))
}
par(mfrow = c(2,2))
for (m in 1:4) {
rate <- c(0, 0.25, 0.5, 0.75)[m]
p <- c(0, 0.25, 0.5, 0.75)[2]
plot(result[[m]][[2]][,1],result[[m]][[2]][,4], main = bquote("Target missing = " ~ .(rate) ~ "," ~ rho ~ "=" ~ .(p)), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))
}
styler:::style_active_file()
par(mfrow = c(4,4))
for (m in 1:4) {
for(j in 1:4)
rate <- c(0, 0.25, 0.5, 0.75)[m]
p <- c(0, 0.25, 0.5, 0.75)[j]
plot(result[[m]][[j]][,3],result[[m]][[j]][,6], main = bquote("Target missing = " ~ .(rate) ~ "," ~ rho ~ "=" ~ .(p)), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))
}}
par(mfrow = c(4,4))
for (m in 1:4) {
for(j in 1:4){
rate <- c(0, 0.25, 0.5, 0.75)[m]
p <- c(0, 0.25, 0.5, 0.75)[j]
plot(result[[m]][[j]][,3],result[[m]][[j]][,6], main = bquote("Target missing = " ~ .(rate) ~ "," ~ rho ~ "=" ~ .(p)), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))}
}
par(mfrow = c(2,2))
for (m in 1:4) {
for(j in 1:4){
rate <- c(0, 0.25, 0.5, 0.75)[m]
p <- c(0, 0.25, 0.5, 0.75)[j]
plot(result[[m]][[j]][,3],result[[m]][[j]][,6], main = bquote("Target missing = " ~ .(rate) ~ "," ~ rho ~ "=" ~ .(p)), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))}
}
par(mfrow = c(2,2))
for (m in 1:4) {
for(j in 1:4){
rate <- c(0, 0.25, 0.5, 0.75)[m]
p <- c(0, 0.25, 0.5, 0.75)[j]
plot(-log10(result[[m]][[j]][,3]), -log10(result[[m]][[j]][,6]), main = bquote("Target missing = " ~ .(rate) ~ "," ~ rho ~ "=" ~ .(p)), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))}
}
par(mfrow = c(2,2))
for (m in 1:4) {
for(j in 1:4){
rate <- c(0, 0.25, 0.5, 0.75)[m]
p <- c(0, 0.25, 0.5, 0.75)[j]
plot(-log10(result[[m]][[j]][,3]), -log10(result[[m]][[j]][,6]), main = bquote("Target missing = " ~ .(rate) ~ "," ~ rho ~ "=" ~ .(p)), xlab = expression(beta[oracle]), ylab = expression(beta[bivariate]))
abline(a = 0, b = 1, col = 'red')
}
}
par(mfrow = c(2,2))
for (m in 1:4) {
for(j in 1:4){
rate <- c(0, 0.25, 0.5, 0.75)[m]
p <- c(0, 0.25, 0.5, 0.75)[j]
plot(-log10(result[[m]][[j]][,3]), -log10(result[[m]][[j]][,6]), main = bquote("Target missing = " ~ .(rate) ~ "," ~ rho ~ "=" ~ .(p)), xlab = expression(-log[10](p[oracle])), ylab = expression(beta[bivariate]))
abline(a = 0, b = 1, col = 'red')
}
}
par(mfrow = c(2,2))
for (m in 1:4) {
for(j in 1:4){
rate <- c(0, 0.25, 0.5, 0.75)[m]
p <- c(0, 0.25, 0.5, 0.75)[j]
plot(-log10(result[[m]][[j]][,3]), -log10(result[[m]][[j]][,6]), main = bquote("Target missing = " ~ .(rate) ~ "," ~ rho ~ "=" ~ .(p)), xlab = expression(-log[10](p[oracle])), ylab = expression(-log[10](p[bivariate])))
abline(a = 0, b = 1, col = 'red')
}
}
styler:::style_active_file()
knitr::opts_chunk$set(echo = FALSE)
temp <- c()
for (m in 1:4) {
for (j in 1:4) {
rate <- c(0, 0.25, 0.5, 0.75)[m]
p <- c(0, 0.25, 0.5, 0.75)[j]
temp <- rbind(temp, c(rate, p, mean(result[[m]][[j]][, 4]), mean(result[[m]][[j]][, 5]), sd(mean(result[[m]][[j]][, 4]))))
}
}
temp <- temp %>% data.frame()
colnames(temo) <- c("mssing rate", "rho", "beta_G", "SE", "Emperical SE")
colnames(temp) <- c("mssing rate", "rho", "beta_G", "SE", "Emperical SE")
chi %>% knitr::kable(booktabs = T, caption = "Average chi-square statistics across SNPs")
temp %>% knitr::kable(booktabs = T, caption = "Average chi-square statistics across SNPs")
temp <- c()
for (m in 1:4) {
for (j in 1:4) {
rate <- c(0, 0.25, 0.5, 0.75)[m]
p <- c(0, 0.25, 0.5, 0.75)[j]
temp <- rbind(temp, c(rate, p, mean(result[[m]][[j]][, 4]), mean(result[[m]][[j]][, 5]), sd(result[[m]][[j]][, 4])))
}
}
temp <- temp %>% data.frame()
colnames(temp) <- c("mssing rate", "rho", "beta_G", "SE", "Emperical SE")
temp %>% knitr::kable(booktabs = T, caption = "Average chi-square statistics across SNPs")
temp <- c()
for (m in 1:4) {
for (j in 1:4) {
rate <- c(0, 0.25, 0.5, 0.75)[m]
p <- c(0, 0.25, 0.5, 0.75)[j]
temp <- rbind(temp, c(rate, p, mean(result[[m]][[j]][, 4]), mean(result[[m]][[j]][, 5]), sd(result[[m]][[j]][, 4])))
}
}
temp <- temp %>% data.frame()
colnames(temp) <- c("missing rate", "rho", "beta_G", "SE", "Emperical SE")
temp %>% knitr::kable(booktabs = T, caption = "Average chi-square statistics across SNPs")
styler:::style_active_file()
pheno <- GenPheno(n = n0, beta = beta, x = X, miss = m, rho = p,
include_intercept = TRUE)
n0 <- 10^3 # number of complete cases
beta <- c(1, 0.42, 0.11) # beta0, beta1, beta2
beta_g <- 0.1
X <- cbind(rnorm(n0), rbinom(n0, 1, 0.5))
pheno <- GenPheno(n = n0, beta = beta, x = X, miss = m, rho = p,
include_intercept = TRUE)
source("SynSurrogateSim.R")
setwd("~/Library/CloudStorage/OneDrive-UniversityofToronto/EHR_research/SyntheticSurrogateAnalysis/Code")
source("SynSurrogateSim.R")
n.sim <- 10^4 # number of replicates
missing_rate <- c(0, 0.25, 0.5, 0.75)
rho <- c(0, 0.25, 0.5, 0.75)
m = 0.25
p = 0.25
n0 <- 10^3 # number of complete cases
beta <- c(1, 0.42, 0.11) # beta0, beta1, beta2
beta_g <- 0.1
X <- cbind(rnorm(n0), rbinom(n0, 1, 0.5))
pheno <- GenPheno(n = n0, beta = beta, x = X, miss = m, rho = p,
include_intercept = TRUE)
knitr::opts_chunk$set(echo = FALSE, message = FALSE)
setwd("/Users/jianhuigao/Library/CloudStorage/OneDrive-UniversityofToronto/EHR_research/SyntheticSurrogateAnalysis/Result/Robustness/")
n.sim <- 10^4
result <- readRDS("robustness.rds")
View(result)
result[[1]][[1]][[1]]
n0 <- 10^3 # number of complete cases
beta <- c(1, 0.42, 0.11) # beta0, beta1, beta2
beta_g <- 0.1
X <- cbind(rnorm(n0), rbinom(n0, 1, 0.5))
pheno <- GenPheno(n = n0, beta = beta, x = X, miss = m, rho = p, include_intercept = TRUE)
g <- GenGeno(n = n0, snps = 1)
oracle <- pheno$oracle + beta_g * g
target <- pheno$target + beta_g * g
oracle <- RNOmni::RankNorm(oracle)
target[!is.na(target)] <- RNOmni::RankNorm(target[!is.na(target)])
View(oracle)
RNOmni::RankNorm(oracle)
RNOmni::RankNorm(pheno$oracle + beta_g * g)
target[!is.na(target)] <- RNOmni::RankNorm(target[!is.na(target)])
oracle <- RNOmni::RankNorm(as.numeric(oracle))
target[!is.na(target)] <- RNOmni::RankNorm(target[!is.na(target)])
assoc.oracle <- lm(oracle ~ g + pheno$x1 + pheno$x2)
out <- summary(assoc.oracle)$coefficients["g", c(1, 2, 4)]
fit.binormal <- SurrogateRegression::Fit.BNLS(
t = target,
s = RNOmni::RankNorm(pheno$surrogate),
X = cbind(pheno %>% dplyr::select(starts_with("x")), g)
)
